"""initial

Revision ID: aa135a729111
Revises: 4a47fa76dfe9
Create Date: 2025-03-19 17:40:34.951954

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'aa135a729111'
down_revision: Union[str, None] = '4a47fa76dfe9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('given_name', sa.String(length=50), nullable=False),
    sa.Column('family_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('redis_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expired_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.Uuid(), nullable=False),
    sa.Column('ip', sa.String(length=24), nullable=False),
    sa.Column('browser', sa.String(length=50), nullable=False),
    sa.Column('os', sa.String(length=50), nullable=False),
    sa.Column('geolocation', sa.String(length=50), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token')
    )
    op.create_unique_constraint(None, 'notifications', ['title'])
    op.create_unique_constraint(None, 'permissions', ['name'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'permissions', type_='unique')
    op.drop_constraint(None, 'notifications', type_='unique')
    op.drop_table('redis_sessions')
    op.drop_table('user')
    # ### end Alembic commands ###
