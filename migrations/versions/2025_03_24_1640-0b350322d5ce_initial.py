"""initial

Revision ID: 0b350322d5ce
Revises: 
Create Date: 2025-03-24 16:40:48.909536

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0b350322d5ce'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('breeds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('patient_code', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('reg_year', sa.Integer(), autoincrement=False, nullable=False),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('categories',
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('cringe', sa.String(length=50), nullable=False),
    sa.Column('faust', sa.String(length=50), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('media_files',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bucket_name', sa.String(length=50), nullable=False),
    sa.Column('file_name', sa.String(length=50), nullable=False),
    sa.Column('extension', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('file_name')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('title', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=50), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('title')
    )
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('accounts_all', sa.Boolean(), nullable=False),
    sa.Column('races_full', sa.Boolean(), nullable=False),
    sa.Column('bonitation_full', sa.Boolean(), nullable=False),
    sa.Column('specialist_full', sa.Boolean(), nullable=False),
    sa.Column('files_full', sa.Boolean(), nullable=False),
    sa.Column('hold_horses', sa.Boolean(), nullable=False),
    sa.Column('create_bonitations', sa.Boolean(), nullable=False),
    sa.Column('create_races', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('regions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('supportmodels',
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['categories.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.Column('given_name', sa.String(length=50), nullable=False),
    sa.Column('family_name', sa.String(length=50), nullable=False),
    sa.Column('middle_name', sa.String(length=50), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('admin_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('short_name', sa.String(length=50), nullable=False),
    sa.Column('address', sa.String(length=50), nullable=False),
    sa.Column('mail_address', sa.String(length=50), nullable=False),
    sa.Column('inn', sa.String(length=10), nullable=False),
    sa.Column('kpp', sa.String(length=9), nullable=False),
    sa.Column('bik', sa.String(length=9), nullable=False),
    sa.Column('ogrn', sa.String(length=13), nullable=False),
    sa.Column('okved_code', sa.String(length=7), nullable=False),
    sa.Column('all_okved_code', sa.String(length=50), nullable=False),
    sa.Column('director_name', sa.String(length=50), nullable=False),
    sa.Column('chief_accountant_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=50), nullable=False),
    sa.Column('tel', sa.String(length=50), nullable=False),
    sa.Column('settlement_account', sa.String(length=50), nullable=False),
    sa.Column('corr_account', sa.String(length=20), nullable=False),
    sa.Column('logo_id', sa.Integer(), nullable=False),
    sa.Column('region_id', sa.Integer(), nullable=False),
    sa.Column('site_link', sa.String(length=100), nullable=False),
    sa.Column('okved_approved', sa.Boolean(), nullable=False),
    sa.Column('land_hectares', sa.Float(), nullable=False),
    sa.Column('land_status_ok', sa.Boolean(), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['admin_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['logo_id'], ['media_files.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['regions.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('corr_account'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('settlement_account'),
    sa.UniqueConstraint('site_link'),
    sa.UniqueConstraint('tel')
    )
    op.create_table('redis_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expired_at', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('access_token', sa.Uuid(), nullable=False),
    sa.Column('ip', sa.String(length=24), nullable=False),
    sa.Column('browser', sa.String(length=50), nullable=False),
    sa.Column('os', sa.String(length=50), nullable=False),
    sa.Column('geolocation', sa.String(length=50), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token')
    )
    op.create_table('horses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('birth_region_id', sa.Integer(), nullable=False),
    sa.Column('chip_num', sa.Integer(), nullable=False),
    sa.Column('sex', postgresql.ENUM('male', 'female', 'None', name='sex_enum'), nullable=False),
    sa.Column('passport_series', sa.TEXT(), nullable=False),
    sa.Column('passport_number', sa.TEXT(), nullable=False),
    sa.Column('passport_issuer', sa.TEXT(), nullable=False),
    sa.Column('passport_issued_at', sa.DateTime(), nullable=False),
    sa.Column('nickname', sa.TEXT(), nullable=False),
    sa.Column('suit', sa.TEXT(), nullable=False),
    sa.Column('father_id', sa.Integer(), nullable=False),
    sa.Column('mother_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.Column('breed_id', sa.Integer(), nullable=False),
    sa.Column('born_at', sa.DateTime(), nullable=True),
    sa.Column('dead_at', sa.DateTime(), nullable=True),
    sa.Column('life_status', postgresql.ENUM('born', 'foal', 'active', 'grand', 'semen', 'dead', name='sex_enum'), nullable=False),
    sa.Column('rating', sa.Float(), nullable=False),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('oblique_length', sa.Integer(), nullable=True),
    sa.Column('torso_circumference', sa.Integer(), nullable=True),
    sa.Column('pastern_circumference', sa.Integer(), nullable=True),
    sa.Column('weight', sa.Integer(), nullable=True),
    sa.Column('rating_origin', sa.Integer(), nullable=True),
    sa.Column('rating_soundings', sa.Integer(), nullable=True),
    sa.Column('rating_exterior', sa.Integer(), nullable=True),
    sa.Column('rating_offspring', sa.Integer(), nullable=True),
    sa.Column('rating_donorship', sa.Integer(), nullable=True),
    sa.Column('rating_typicality', sa.Integer(), nullable=True),
    sa.Column('rating_breed', sa.Integer(), nullable=True),
    sa.Column('rating_efficiency', sa.Integer(), nullable=True),
    sa.Column('rating_adaptability', sa.Integer(), nullable=True),
    sa.Column('coolness', sa.Integer(), nullable=True),
    sa.Column('insemination_percent', sa.Integer(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['birth_region_id'], ['regions.id'], ),
    sa.ForeignKeyConstraint(['breed_id'], ['breeds.id'], ),
    sa.ForeignKeyConstraint(['father_id'], ['horses.id'], ),
    sa.ForeignKeyConstraint(['mother_id'], ['horses.id'], ),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('horses')
    op.drop_table('redis_sessions')
    op.drop_table('organization')
    op.drop_table('users')
    op.drop_table('supportmodels')
    op.drop_table('regions')
    op.drop_table('permissions')
    op.drop_table('notifications')
    op.drop_table('media_files')
    op.drop_table('categories')
    op.drop_table('breeds')
    # ### end Alembic commands ###
